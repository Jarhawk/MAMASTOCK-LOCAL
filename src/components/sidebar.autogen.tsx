/* AUTO-GENERATED. Do not edit manually.
   * Generated by scripts/generate-navigation.cjs
   */
import React from "react";
import { NavLink } from "react-router-dom";

const RAW_LINKS = [
  { to: "/debug/accessexample", label: "Access Example" },
  { to: "/consolidation/accessmultisites", label: "Access Multi Sites" },
  { to: "/parametrage/accessrights", label: "Access Rights" },
  { to: "/accueil", label: "Accueil" },
  { to: "/achats/achatdetail", label: "Achat Detail" },
  { to: "/alertes", label: "Alertes" },
  { to: "/stock/alertesrupture", label: "Alertes Rupture" },
  { to: "/analyse/analyse", label: "Analyse" },
  { to: "/analytique/analytiquedashboard", label: "Analytique Dashboard" },
  { to: "/fournisseurs/apifournisseurform", label: "Api Fournisseur Form" },
  { to: "/barmanager", label: "Bar Manager" },
  { to: "/bons_livraison/blcreate", label: "BLCreate" },
  { to: "/auth/blocked", label: "Blocked" },
  { to: "/carte/carte", label: "Carte" },
  { to: "/carteplats", label: "Carte Plats" },
  { to: "/catalogue/cataloguesyncviewer", label: "Catalogue Sync Viewer" },
  { to: "/legal/cgu", label: "Cgu" },
  { to: "/commandes/commandedetail", label: "Commande Detail" },
  { to: "/supervision/comparateurfiches", label: "Comparateur Fiches" },
  { to: "/consentements", label: "Consentements" },
  { to: "/costboisson/costboisson", label: "Cost Boisson" },
  { to: "/costing/costingcarte", label: "Costing Carte" },
  { to: "/dashboard/dashboardbuilder", label: "Dashboard Builder" },
  { to: "/documents/documentform", label: "Document Form" },
  { to: "/dossierdonnees", label: "Dossier Donnees" },
  { to: "/inventaire/ecartinventaire", label: "Ecart Inventaire" },
  { to: "/ecarts/ecarts", label: "Ecarts" },
  { to: "/emails/emailsenvoyes", label: "Emails Envoyes" },
  { to: "/engineeringmenu", label: "Engineering Menu" },
  { to: "/factures/facturecreate", label: "Facture Create" },
  { to: "/parametres/familles", label: "Familles" },
  { to: "/feedback", label: "Feedback" },
  { to: "/fiches/fichedetail", label: "Fiche Detail" },
  { to: "/reporting/graphcost", label: "Graph Cost" },
  { to: "/journal", label: "Journal" },
  { to: "/public/landingpage", label: "Landing Page" },
  { to: "/login", label: "Login" },
  { to: "/menus/menudetail", label: "Menu Detail" },
  { to: "/cuisine/menudujour", label: "Menu Du Jour" },
  { to: "/engineering/menuengineering", label: "Menu Engineering" },
  { to: "/mobile/mobileaccueil", label: "Mobile Accueil" },
  { to: "/notfound", label: "Not Found" },
  { to: "/notifications/notificationsettingsform", label: "Notification Settings Form" },
  { to: "/pertes", label: "Pertes" },
  { to: "/planningdetail", label: "Planning Detail" },
  { to: "/planningform", label: "Planning Form" },
  { to: "/planningmodule", label: "Planning Module" },
  { to: "/produits/produitdetail", label: "Produit Detail" },
  { to: "/promotions/promotionform", label: "Promotion Form" },
  { to: "/receptions/receptions", label: "Receptions" },
  { to: "/recettes/recettes", label: "Recettes" },
  { to: "/requisitions/requisitiondetail", label: "Requisition Detail" },
  { to: "/rgpd", label: "Rgpd" },
  { to: "/signalements/signalementdetail", label: "Signalement Detail" },
  { to: "/simulation/simulation", label: "Simulation" },
  { to: "/planning/simulationplanner", label: "Simulation Planner" },
  { to: "/stats/stats", label: "Stats" },
  { to: "/surcouts/surcouts", label: "Surcouts" },
  { to: "/utilisateurs", label: "Utilisateurs" },
  { to: "/validations", label: "Validations" },
];

const SIDEBAR_LINKS = (() => {
  const seen = new Set();
  const deduped = [];
  for (const link of RAW_LINKS) {
    if (seen.has(link.to)) continue;
    seen.add(link.to);
    deduped.push(link);
  }
  return deduped;
})();

const navLinkClassName = ({ isActive }: { isActive: boolean }) =>
  "block px-3 py-2 rounded hover:bg-muted " + (isActive ? "font-semibold" : "");

export default function SidebarAutogen() {
  return (
    <aside className="w-64 p-3 border-r border-border bg-background">
      <nav>
        <ul className="space-y-1">
          {SIDEBAR_LINKS.map(({ to, label }) => (
            <li key={to}>
              <NavLink to={to} className={navLinkClassName}>
                {label}
              </NavLink>
            </li>
          ))}
        </ul>
      </nav>
    </aside>
  );
}
